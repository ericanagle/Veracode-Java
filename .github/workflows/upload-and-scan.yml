name: Upload and Scan using Veracode Docker

# Controls when the workflow will run
on:
  # Triggers the workflow on push where package-lock.json modifies or pull request events
  push:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Check out repo 
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        working-directory: ./app/
        run: mvn -B package --file pom.xml
      - uses: actions/upload-artifact@v2 # Copy files from repository to docker container so the next uploadandscan action can access them.
        with:
          path: ./app/target/verademo.war # See: https://github.com/actions/upload-artifact
          name: built-file
        
  generate-sandbox-name:
    runs-on: [ ubuntu-latest ]
    outputs:
      sandbox-name: ${{ steps.set-sandbox-name.outputs.sandbox-name }}
    steps:
      # Creates the sandbox(logical release descriptive status of current branch)
      - id: set-sandbox-name
        name: set-sandbox-name
        run: |
          echo ${{ github.head_ref }}
          branchName="${{ github.head_ref }}"
          if [[ -z "$branchName" ]]; then
            branchName="${{ github.ref }}"
          fi
          echo "::set-output name=sandbox-name::$branchName"
  
  SAST-Scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [generate-sandbox-name, Build]
    # Steps represent a sequence of tasks that will be executed as part of the job
    container: 
      image: veracode/api-wrapper-java:latest
      options: --user root
    steps:
      - name: Get-scan-target
        uses: actions/download-artifact@v2 # See https://github.com/actions/download-artifact
        with:
          name: built-file
      - name: view files
        run: |
          ls -laR
      - name: scan
        continue-on-error: true
        run: |
          java -jar /opt/veracode/api-wrapper.jar 
              -vid ${{secrets.VERACODE_ID}}
              -vkey ${{secrets.VERACODE_KEY}} 
              -action UploadAndScan
              -createprofile true
              -appname ${{ github.repository }}
              -version ${{ github.run_id }}
              -filepath ./app/target/verademo.war
              -sandboxname ${{needs.generate-sandbox-name.outputs.sandbox-name}}
              -createsandbox true
